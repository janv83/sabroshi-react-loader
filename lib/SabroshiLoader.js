module.exports=function(e){var t={};function a(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,a),r.l=!0,r.exports}return a.m=e,a.c=t,a.d=function(e,t,o){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(a.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)a.d(o,r,function(t){return e[t]}.bind(null,r));return o},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="",a(a.s=1)}([function(e,t){e.exports=require("react")},function(e,t,a){"use strict";a.r(t);var o=a(0),r=a.n(o);t.default=function(e){let[t,a]=Object(o.useState)(!1),n=e.sabroshiAvatar;return Object(o.useEffect)(()=>{if(n=function(e){var t=window.location.search.substring(1);console.log(t);var a=t.split("&");console.log(a);for(var o=0;o<a.length;o++){var r=a[o].split("=");if(console.log(r),r[0]==e)return r[1]}return!1}("sabroshiAvatar"),n||(n=e.sabroshiAvatar),n||window.localStorage.sabroshiAvatar)if(n&&"disconnect"!==n){window.localStorage.sabroshiAvatar=n;const t=document.createElement("script");t.type="text/javascript",t.src="https://bico.media/2ae5137168cb00d204becebe83bc54af863392bcbc3f0da0340363aa263c6ed1.js",t.async="true",t.addEventListener("load",()=>{console.log("bsvloaded");const t=document.createElement("script");t.type="text/javascript",t.src="https://bico.media/7429a95bf9f7d1b9bebd05031f7bd32aa2f00e97e01271ec182294f1cdb65642.js",t.async="true",t.addEventListener("load",()=>{console.log("runloaded"),async function e(t,a,o){const r=new Run({network:"main",trust:"*"}),n=new Run.plugins.RunConnect;for(const e of Object.keys(precachedData))await n.set(e,precachedData[e]);r.cache=n,r.client=o;try{let e=await async function(e,t){e.activate();let a=await e.load(t);return await a.sync({inner:!1}),window.localStorage.sabroshiAvatar=a.location,a}(r,window.localStorage.sabroshiAvatar);if(e&&e.owner===e.activeSabroshi.owner){let o=new Image;o.src="data:image/png;base64,"+e.activeSabroshi.metadata.image.base64Data,window.localStorage.sabroshiDataURL=o.src,o.className="sabroshiPicture",t&&a&&(o.width=t,o.height=a),document.getElementById("sabroshiContainer").append(o)}else console.log("sabroshi is not the same owner as sabroshiAvatar, setting of new Sabroshi is neeeded")}catch(o){console.log("run error "+o.message),o.message.includes("ClientModeError")&&await e(t,a,!1)}}(e.width,e.height,!1).then(()=>{a(!0)})}),document.body.appendChild(t)}),document.body.appendChild(t)}else"disconnect"===n&&(window.localStorage.removeItem("sabroshiAvatar"),window.localStorage.removeItem("sabroshiDataURL"),window.localStorage.sabroshiDisconnect=!0)},[]),r.a.createElement("div",{id:"sabroshiContainer"})}}]);